// generated from rosidl_adapter/resource/msg.idl.em
// with input from px4_msgs/msg/DronecanNodeStatus.msg
// generated code does not contain a copyright notice


module px4_msgs {
  module msg {
    module DronecanNodeStatus_Constants {
      const uint8 HEALTH_OK = 0;
      const uint8 HEALTH_WARNING = 1;
      const uint8 HEALTH_ERROR = 2;
      const uint8 HEALTH_CRITICAL = 3;
      const uint8 MODE_OPERATIONAL = 0;
      const uint8 MODE_INITIALIZATION = 1;
      const uint8 MODE_MAINTENANCE = 2;
      const uint8 MODE_SOFTWARE_UPDATE = 3;
      const uint8 MODE_OFFLINE = 7;
    };
    struct DronecanNodeStatus {
      @verbatim (language="comment", text=
        " time since system start (microseconds)")
      uint64 timestamp;

      @verbatim (language="comment", text=
        " The node ID which this data comes from")
      uint16 node_id;

      @verbatim (language="comment", text=
        " From the uavcan.protocol.NodeStatus message" "\n"
        " Node uptime")
      uint32 uptime_sec;

      uint8 health;

      uint8 mode;

      @verbatim (language="comment", text=
        " Not used currently, keep zero when publishing, ignore when receiving.")
      uint8 sub_mode;

      @verbatim (language="comment", text=
        " Optional, vendor-specific node status code, e.g. a fault code or a status bitmask.")
      uint16 vendor_specific_status_code;
    };
  };
};
